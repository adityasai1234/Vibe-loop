"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/songs/route";
exports.ids = ["app/api/songs/route"];
exports.modules = {

/***/ "@aws-sdk/client-s3":
/*!*************************************!*\
  !*** external "@aws-sdk/client-s3" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@aws-sdk/client-s3");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsongs%2Froute&page=%2Fapi%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsongs%2Froute.ts&appDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsongs%2Froute&page=%2Fapi%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsongs%2Froute.ts&appDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_aditysaib_Documents_Vibe_loop_app_api_songs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/songs/route.ts */ \"(rsc)/./app/api/songs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/songs/route\",\n        pathname: \"/api/songs\",\n        filename: \"route\",\n        bundlePath: \"app/api/songs/route\"\n    },\n    resolvedPagePath: \"/Users/aditysaib/Documents/Vibe-loop/app/api/songs/route.ts\",\n    nextConfigOutput,\n    userland: _Users_aditysaib_Documents_Vibe_loop_app_api_songs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/songs/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzb25ncyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc29uZ3MlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzb25ncyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFkaXR5c2FpYiUyRkRvY3VtZW50cyUyRlZpYmUtbG9vcCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZhZGl0eXNhaWIlMkZEb2N1bWVudHMlMkZWaWJlLWxvb3AmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ1c7QUFDeEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aWJlbG9vcC8/OWNlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvYWRpdHlzYWliL0RvY3VtZW50cy9WaWJlLWxvb3AvYXBwL2FwaS9zb25ncy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc29uZ3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zb25nc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc29uZ3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYWRpdHlzYWliL0RvY3VtZW50cy9WaWJlLWxvb3AvYXBwL2FwaS9zb25ncy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc29uZ3Mvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsongs%2Froute&page=%2Fapi%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsongs%2Froute.ts&appDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/songs/route.ts":
/*!********************************!*\
  !*** ./app/api/songs/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _lib_s3_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/s3-service */ \"(rsc)/./lib/s3-service.ts\");\n\n\n\nasync function GET() {\n    try {\n        const { userId } = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.auth)();\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const songs = await (0,_lib_s3_service__WEBPACK_IMPORTED_MODULE_1__.getAllSongs)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            songs\n        });\n    } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch songs\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { userId } = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.auth)();\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Check content length to prevent memory issues\n        const contentLength = request.headers.get(\"content-length\");\n        if (contentLength) {\n            const size = parseInt(contentLength, 10);\n            const maxSize = 4 * 1024 * 1024 // 4MB (Vercel serverless limit)\n            ;\n            if (size > maxSize) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: `File too large for direct upload. Please use the web interface for files larger than 4MB. Received: ${(size / 1024 / 1024).toFixed(2)}MB`\n                }, {\n                    status: 413\n                });\n            }\n        }\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        const title = formData.get(\"title\");\n        const artist = formData.get(\"artist\");\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"No file uploaded\"\n            }, {\n                status: 400\n            });\n        }\n        if (!title || !artist) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Title and artist are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate file type\n        if (!file.type.startsWith(\"audio/\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"File must be an audio file\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate file size again after parsing\n        const maxSize = 4 * 1024 * 1024 // 4MB (Vercel serverless limit)\n        ;\n        if (file.size > maxSize) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `File too large for direct upload. Please use the web interface for files larger than 4MB. Received: ${(file.size / 1024 / 1024).toFixed(2)}MB`\n            }, {\n                status: 413\n            });\n        }\n        // Generate unique song ID\n        const songId = (0,_lib_s3_service__WEBPACK_IMPORTED_MODULE_1__.generateSongId)();\n        // Convert file to buffer\n        const fileBuffer = Buffer.from(await file.arrayBuffer());\n        // Upload audio file to S3\n        await (0,_lib_s3_service__WEBPACK_IMPORTED_MODULE_1__.uploadAudioFile)(songId, fileBuffer, file.type);\n        // Store metadata\n        const metadata = {\n            title,\n            artist,\n            likes: 0,\n            uploadedAt: new Date().toISOString()\n        };\n        await (0,_lib_s3_service__WEBPACK_IMPORTED_MODULE_1__.storeSongMetadata)(songId, metadata);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Song uploaded successfully\",\n            songId\n        });\n    } catch (error) {\n        console.error(\"Error uploading song:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: `Failed to upload song: ${error instanceof Error ? error.message : \"Unknown error\"}`\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/songs/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/s3-service.ts":
/*!***************************!*\
  !*** ./lib/s3-service.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUserLikeToSong: () => (/* binding */ addUserLikeToSong),\n/* harmony export */   deleteSong: () => (/* binding */ deleteSong),\n/* harmony export */   generateSongId: () => (/* binding */ generateSongId),\n/* harmony export */   getAllMoodLogs: () => (/* binding */ getAllMoodLogs),\n/* harmony export */   getAllSongs: () => (/* binding */ getAllSongs),\n/* harmony export */   getAllSuggestions: () => (/* binding */ getAllSuggestions),\n/* harmony export */   getAudioUrl: () => (/* binding */ getAudioUrl),\n/* harmony export */   getSongMetadata: () => (/* binding */ getSongMetadata),\n/* harmony export */   getSuggestionById: () => (/* binding */ getSuggestionById),\n/* harmony export */   getUserMoodLogForDate: () => (/* binding */ getUserMoodLogForDate),\n/* harmony export */   getUserMoodLogs: () => (/* binding */ getUserMoodLogs),\n/* harmony export */   hasUserLikedSong: () => (/* binding */ hasUserLikedSong),\n/* harmony export */   hasUserLoggedForDate: () => (/* binding */ hasUserLoggedForDate),\n/* harmony export */   likeSuggestionById: () => (/* binding */ likeSuggestionById),\n/* harmony export */   storeMoodLog: () => (/* binding */ storeMoodLog),\n/* harmony export */   storeSongMetadata: () => (/* binding */ storeSongMetadata),\n/* harmony export */   storeSuggestion: () => (/* binding */ storeSuggestion),\n/* harmony export */   updateSongLikes: () => (/* binding */ updateSongLikes),\n/* harmony export */   uploadAudioFile: () => (/* binding */ uploadAudioFile)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-s3 */ \"@aws-sdk/client-s3\");\n/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/s3-request-presigner */ \"(rsc)/./node_modules/@aws-sdk/s3-request-presigner/dist-es/index.js\");\n\n\n// S3 Client configuration\nconst s3Client = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.S3Client({\n    endpoint: \"https://hel1.your-objectstorage.com\",\n    region: \"eu-central-1\",\n    credentials: {\n        accessKeyId: \"1BY6DNARWDPSQT4DXA18\",\n        secretAccessKey: \"ieGy5o6biNPCc09iKbE55sPe01JywW8u5pFpnk8J\"\n    },\n    forcePathStyle: \"false\" === \"true\"\n});\nconst BUCKET_NAME = \"serenidad\";\n// Upload audio file to S3\nasync function uploadAudioFile(songId, file, contentType = \"audio/mpeg\") {\n    const key = `audio/${songId}.mp3`;\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.PutObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Body: file,\n        ContentType: contentType\n    });\n    await s3Client.send(command);\n    return key;\n}\n// Store song metadata as JSON file in S3\nasync function storeSongMetadata(songId, metadata) {\n    const key = `metadata/${songId}.json`;\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.PutObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Body: JSON.stringify(metadata),\n        ContentType: \"application/json\"\n    });\n    await s3Client.send(command);\n}\n// Get song metadata from S3\nasync function getSongMetadata(songId) {\n    try {\n        const key = `metadata/${songId}.json`;\n        const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n            Bucket: BUCKET_NAME,\n            Key: key\n        });\n        const response = await s3Client.send(command);\n        const body = await response.Body?.transformToString();\n        return body ? JSON.parse(body) : null;\n    } catch (error) {\n        console.error(\"Error getting metadata:\", error);\n        return null;\n    }\n}\n// Get signed URL for audio streaming\nasync function getAudioUrl(songId) {\n    const key = `audio/${songId}.mp3`;\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key\n    });\n    // URL expires in 1 hour\n    return await (0,_aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_1__.getSignedUrl)(s3Client, command, {\n        expiresIn: 3600\n    });\n}\n// List all songs with metadata\nasync function getAllSongs() {\n    try {\n        // List all metadata files\n        const listCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.ListObjectsV2Command({\n            Bucket: BUCKET_NAME,\n            Prefix: \"metadata/\"\n        });\n        const response = await s3Client.send(listCommand);\n        const objects = response.Contents || [];\n        // If no objects found, return empty array (this is normal for new buckets)\n        if (!objects.length) {\n            return [];\n        }\n        const songs = [];\n        for (const object of objects){\n            if (object.Key && object.Key.endsWith(\".json\")) {\n                const songId = object.Key.replace(\"metadata/\", \"\").replace(\".json\", \"\");\n                const metadata = await getSongMetadata(songId);\n                if (metadata) {\n                    try {\n                        const audioUrl = await getAudioUrl(songId);\n                        songs.push({\n                            id: songId,\n                            title: metadata.title,\n                            artist: metadata.artist,\n                            audioUrl,\n                            likes: metadata.likes,\n                            uploadedAt: metadata.uploadedAt\n                        });\n                    } catch (audioError) {\n                        console.warn(`Could not get audio URL for song ${songId}:`, audioError);\n                    }\n                }\n            }\n        }\n        // Sort by upload date (newest first)\n        return songs.sort((a, b)=>new Date(b.uploadedAt).getTime() - new Date(a.uploadedAt).getTime());\n    } catch (error) {\n        // Handle the case where bucket is empty or metadata prefix doesn't exist\n        if (error.name === \"NoSuchKey\" || error.Code === \"NoSuchKey\") {\n            return [];\n        }\n        console.error(\"Error listing songs:\", error);\n        return [];\n    }\n}\n// Update song likes\nasync function updateSongLikes(songId, likes) {\n    const metadata = await getSongMetadata(songId);\n    if (metadata) {\n        metadata.likes = likes;\n        await storeSongMetadata(songId, metadata);\n    }\n}\n// Delete song and its metadata\nasync function deleteSong(songId) {\n    const audioKey = `audio/${songId}.mp3`;\n    const metadataKey = `metadata/${songId}.json`;\n    await Promise.all([\n        s3Client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.DeleteObjectCommand({\n            Bucket: BUCKET_NAME,\n            Key: audioKey\n        })),\n        s3Client.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.DeleteObjectCommand({\n            Bucket: BUCKET_NAME,\n            Key: metadataKey\n        }))\n    ]);\n}\n// Generate unique song ID\nfunction generateSongId() {\n    return `song_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n// Store mood log as JSON file in S3\nasync function storeMoodLog(log) {\n    const id = `mood_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const key = `mood-logs/${id}.json`;\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.PutObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Body: JSON.stringify(log),\n        ContentType: \"application/json\"\n    });\n    await s3Client.send(command);\n}\n// List all mood logs from S3\nasync function getAllMoodLogs() {\n    try {\n        const listCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.ListObjectsV2Command({\n            Bucket: BUCKET_NAME,\n            Prefix: \"mood-logs/\"\n        });\n        const response = await s3Client.send(listCommand);\n        const objects = response.Contents || [];\n        if (!objects.length) return [];\n        const logs = [];\n        for (const object of objects){\n            if (object.Key && object.Key.endsWith(\".json\")) {\n                const getCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n                    Bucket: BUCKET_NAME,\n                    Key: object.Key\n                });\n                const res = await s3Client.send(getCommand);\n                const body = await res.Body?.transformToString();\n                if (body) {\n                    try {\n                        logs.push(JSON.parse(body));\n                    } catch  {}\n                }\n            }\n        }\n        // Sort by time (newest first)\n        return logs.sort((a, b)=>new Date(b.time).getTime() - new Date(a.time).getTime());\n    } catch (error) {\n        console.error(\"Error listing mood logs:\", error);\n        return [];\n    }\n}\n// Get mood logs for a specific user\nasync function getUserMoodLogs(userId) {\n    const allLogs = await getAllMoodLogs();\n    return allLogs.filter((log)=>log.userId === userId);\n}\n// Check if user has already logged for a specific date\nasync function hasUserLoggedForDate(userId, date) {\n    const userLogs = await getUserMoodLogs(userId);\n    return userLogs.some((log)=>{\n        const logDate = new Date(log.time).toISOString().split(\"T\")[0];\n        return logDate === date;\n    });\n}\n// Get user's mood log for a specific date\nasync function getUserMoodLogForDate(userId, date) {\n    const userLogs = await getUserMoodLogs(userId);\n    const logForDate = userLogs.find((log)=>{\n        const logDate = new Date(log.time).toISOString().split(\"T\")[0];\n        return logDate === date;\n    });\n    return logForDate || null;\n}\n// Check if a user has already liked a song\nasync function hasUserLikedSong(songId, userId) {\n    const metadata = await getSongMetadata(songId);\n    if (!metadata) return false;\n    return Array.isArray(metadata.likedBy) && metadata.likedBy.includes(userId);\n}\n// Add a user's like to a song (if not already liked)\nasync function addUserLikeToSong(songId, userId) {\n    const metadata = await getSongMetadata(songId);\n    if (!metadata) return null;\n    if (!Array.isArray(metadata.likedBy)) metadata.likedBy = [];\n    if (!metadata.likedBy.includes(userId)) {\n        metadata.likedBy.push(userId);\n        metadata.likes = (metadata.likes || 0) + 1;\n        await storeSongMetadata(songId, metadata);\n        return metadata.likes;\n    }\n    return metadata.likes;\n}\n// Store a suggestion as JSON file in S3\nasync function storeSuggestion(suggestion) {\n    const id = `suggestion_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const key = `suggestions/${id}.json`;\n    const suggestionObj = {\n        id,\n        artist: suggestion.artist,\n        youtubeUrl: suggestion.youtubeUrl,\n        createdAt: new Date().toISOString(),\n        likes: 0\n    };\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.PutObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Body: JSON.stringify(suggestionObj),\n        ContentType: \"application/json\"\n    });\n    await s3Client.send(command);\n}\n// Get a suggestion by id\nasync function getSuggestionById(id) {\n    try {\n        const key = `suggestions/${id}.json`;\n        const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n            Bucket: BUCKET_NAME,\n            Key: key\n        });\n        const response = await s3Client.send(command);\n        const body = await response.Body?.transformToString();\n        return body ? JSON.parse(body) : null;\n    } catch (error) {\n        return null;\n    }\n}\n// Like a suggestion by id (increment likes)\nasync function likeSuggestionById(id) {\n    const suggestion = await getSuggestionById(id);\n    if (!suggestion) return null;\n    suggestion.likes = (suggestion.likes || 0) + 1;\n    const key = `suggestions/${id}.json`;\n    const command = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.PutObjectCommand({\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Body: JSON.stringify(suggestion),\n        ContentType: \"application/json\"\n    });\n    await s3Client.send(command);\n    return suggestion;\n}\n// List all suggestions from S3\nasync function getAllSuggestions() {\n    try {\n        const listCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.ListObjectsV2Command({\n            Bucket: BUCKET_NAME,\n            Prefix: \"suggestions/\"\n        });\n        const response = await s3Client.send(listCommand);\n        const objects = response.Contents || [];\n        if (!objects.length) return [];\n        const suggestions = [];\n        for (const object of objects){\n            if (object.Key && object.Key.endsWith(\".json\")) {\n                const getCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_0__.GetObjectCommand({\n                    Bucket: BUCKET_NAME,\n                    Key: object.Key\n                });\n                const res = await s3Client.send(getCommand);\n                const body = await res.Body?.transformToString();\n                if (body) {\n                    try {\n                        suggestions.push(JSON.parse(body));\n                    } catch  {}\n                }\n            }\n        }\n        // Sort by createdAt (newest first)\n        return suggestions.sort((a, b)=>new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n    } catch (error) {\n        console.error(\"Error listing suggestions:\", error);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/s3-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/tslib","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/@smithy","vendor-chunks/@aws-sdk"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsongs%2Froute&page=%2Fapi%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsongs%2Froute.ts&appDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Faditysaib%2FDocuments%2FVibe-loop&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();